/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.111
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as Gt,b as Xt}from"./chunk-VWKHEOOZ.js";import{a as kt}from"./chunk-ZCVEPFKV.js";import{a as lt}from"./chunk-FHACSVTR.js";import{a as Dt}from"./chunk-R342DLSA.js";import"./chunk-LIYSS65T.js";import"./chunk-6BM2HRAM.js";import{a as qt}from"./chunk-5QO2XXQ5.js";import"./chunk-GN2CGLQJ.js";import"./chunk-CJ3BUWJF.js";import{d as zt,i as Lt}from"./chunk-KRUAPDMK.js";import"./chunk-XLNRNYRL.js";import{b as $,c as Ot,d as wt}from"./chunk-RZVOXF67.js";import"./chunk-WJY2YZOB.js";import{a as P,b as N,c as Ht}from"./chunk-6DBWVLDX.js";import{a as r}from"./chunk-ZEICRW3N.js";import"./chunk-E4M5DU35.js";import{a as Vt}from"./chunk-TCDHAGGB.js";import{a as Ut}from"./chunk-KW3W45S2.js";import"./chunk-ANRF456S.js";import{e as ht}from"./chunk-5REUCI47.js";var te=Uint16Array.BYTES_PER_ELEMENT,mt=Int32Array.BYTES_PER_ELEMENT,Pt=Uint32Array.BYTES_PER_ELEMENT,ee=Float32Array.BYTES_PER_ELEMENT,H=Float64Array.BYTES_PER_ELEMENT;function tt(t,e,n){n=Ut(n,r);let i=t.length;for(let o=0;o<i;++o)if(n.equalsEpsilon(t[o],e,r.EPSILON12))return o;return-1}function oe(t,e){t.ellipsoid=Ht.clone(t.ellipsoid),t.rectangle=Ot.clone(t.rectangle);let n=se(t.buffer,t.relativeToCenter,t.ellipsoid,t.rectangle,t.nativeRectangle,t.exaggeration,t.exaggerationRelativeHeight,t.skirtHeight,t.includeWebMercatorT,t.negativeAltitudeExponentBias,t.negativeElevationThreshold),i=n.vertices;e.push(i.buffer);let r=n.indices;return e.push(r.buffer),{vertices:i.buffer,indices:r.buffer,numberOfAttributes:n.encoding.stride,minimumHeight:n.minimumHeight,maximumHeight:n.maximumHeight,boundingSphere3D:n.boundingSphere3D,orientedBoundingBox:n.orientedBoundingBox,occludeePointInScaledSpace:n.occludeePointInScaledSpace,encoding:n.encoding,vertexCountWithoutSkirts:n.vertexCountWithoutSkirts,indexCountWithoutSkirts:n.indexCountWithoutSkirts,westIndicesSouthToNorth:n.westIndicesSouthToNorth,southIndicesEastToWest:n.southIndicesEastToWest,eastIndicesNorthToSouth:n.eastIndicesNorthToSouth,northIndicesWestToEast:n.northIndicesWestToEast}}var u=new N,G=new P,ne=new P,ie=new P,re=new $;function se(t,e,n,i,o,a,s,l,h,c,m){let d,g,p,I,f,E;ht(i)?(d=i.west,g=i.south,p=i.east,I=i.north,f=i.width,E=i.height):(d=r.toRadians(o.west),g=r.toRadians(o.south),p=r.toRadians(o.east),I=r.toRadians(o.north),f=r.toRadians(i.width),E=r.toRadians(i.height));let T,S,x=[g,I],w=[d,p],R=Lt.eastNorthUpToFixedFrame(e,n),k=$.inverseTransformation(R,re);h&&(T=lt.geodeticLatitudeToMercatorAngle(g),S=1/(lt.geodeticLatitudeToMercatorAngle(I)-T));let A=1!==a,b=new DataView(t),B=Number.POSITIVE_INFINITY,y=Number.NEGATIVE_INFINITY,F=ne;F.x=Number.POSITIVE_INFINITY,F.y=Number.POSITIVE_INFINITY,F.z=Number.POSITIVE_INFINITY;let M=ie;M.x=Number.NEGATIVE_INFINITY,M.y=Number.NEGATIVE_INFINITY,M.z=Number.NEGATIVE_INFINITY;let v,W,_=0,C=0,j=0;for(W=0;W<4;++W){let t=_;v=b.getUint32(t,!0),t+=Pt;let e=r.toRadians(180*b.getFloat64(t,!0));t+=H,-1===tt(w,e)&&w.push(e);let n=r.toRadians(180*b.getFloat64(t,!0));t+=H,-1===tt(x,n)&&x.push(n),t+=2*H;let i=b.getInt32(t,!0);t+=mt,C+=i,i=b.getInt32(t,!0),j+=3*i,_+=v+Pt}let V=[],U=[],L=new Array(C),O=new Array(C),Y=new Array(C),D=h?new Array(C):[],X=A?new Array(C):[],z=new Array(j),K=[],Z=[],J=[],q=[],Q=0,et=0;for(_=0,W=0;W<4;++W){v=b.getUint32(_,!0),_+=Pt;let t=_,e=r.toRadians(180*b.getFloat64(_,!0));_+=H;let i=r.toRadians(180*b.getFloat64(_,!0));_+=H;let o=r.toRadians(180*b.getFloat64(_,!0)),a=.5*o;_+=H;let s=r.toRadians(180*b.getFloat64(_,!0)),l=.5*s;_+=H;let f=b.getInt32(_,!0);_+=mt;let E=b.getInt32(_,!0);_+=mt,_+=mt;let R=new Array(f);for(let t=0;t<f;++t){let f=e+b.getUint8(_++)*o;u.longitude=f;let E=i+b.getUint8(_++)*s;u.latitude=E;let H=b.getFloat32(_,!0);if(_+=ee,0!==H&&H<m&&(H*=-Math.pow(2,c)),H*=6371010,u.height=H,-1!==tt(w,f)||-1!==tt(x,E)){let e=tt(V,u,N);if(-1!==e){R[t]=U[e];continue}V.push(N.clone(u)),U.push(Q)}R[t]=Q,Math.abs(f-d)<a?K.push({index:Q,cartographic:N.clone(u)}):Math.abs(f-p)<a?J.push({index:Q,cartographic:N.clone(u)}):Math.abs(E-g)<l?Z.push({index:Q,cartographic:N.clone(u)}):Math.abs(E-I)<l&&q.push({index:Q,cartographic:N.clone(u)}),B=Math.min(H,B),y=Math.max(H,y),Y[Q]=H;let v=n.cartographicToCartesian(u);if(L[Q]=v,h&&(D[Q]=(lt.geodeticLatitudeToMercatorAngle(E)-T)*S),A){let t=n.geodeticSurfaceNormal(v);X[Q]=t}$.multiplyByPoint(k,v,G),P.minimumByComponent(G,F,F),P.maximumByComponent(G,M,M);let W=(f-d)/(p-d);W=r.clamp(W,0,1);let C=(E-g)/(I-g);C=r.clamp(C,0,1),O[Q]=new wt(W,C),++Q}let W=3*E;for(let t=0;t<W;++t,++et)z[et]=R[b.getUint16(_,!0)],_+=te;if(v!==_-t)throw new Vt("Invalid terrain tile.")}L.length=Q,O.length=Q,Y.length=Q,h&&(D.length=Q),A&&(X.length=Q);let nt=Q,it=et,rt={hMin:B,lastBorderPoint:void 0,skirtHeight:l,toENU:k,ellipsoid:n,minimum:F,maximum:M};K.sort((function(t,e){return e.cartographic.latitude-t.cartographic.latitude})),Z.sort((function(t,e){return t.cartographic.longitude-e.cartographic.longitude})),J.sort((function(t,e){return t.cartographic.latitude-e.cartographic.latitude})),q.sort((function(t,e){return e.cartographic.longitude-t.cartographic.longitude}));let ot=1e-5;if(gt(L,Y,O,D,X,z,rt,K,-ot*f,!0,-ot*E),gt(L,Y,O,D,X,z,rt,Z,-ot*E,!1),gt(L,Y,O,D,X,z,rt,J,ot*f,!0,ot*E),gt(L,Y,O,D,X,z,rt,q,ot*E,!1),K.length>0&&q.length>0){let t=K[0].index,e=nt,n=q[q.length-1].index,i=L.length-1;z.push(n,i,e,e,t,n)}C=L.length;let at,ut=zt.fromPoints(L);ht(i)&&(at=Dt.fromRectangle(i,B,y,n));let st=new Gt(n).computeHorizonCullingPointPossiblyUnderEllipsoid(e,L,B),ct=new qt(F,M,e),dt=new Xt(e,ct,rt.hMin,y,R,!1,h,A,a,s),pt=new Float32Array(C*dt.stride),It=0;for(let t=0;t<C;++t)It=dt.encode(pt,It,L[t],O[t],Y[t],void 0,D[t],X[t]);let Nt=K.map((function(t){return t.index})).reverse(),ft=Z.map((function(t){return t.index})).reverse(),Et=J.map((function(t){return t.index})).reverse(),Tt=q.map((function(t){return t.index})).reverse();return ft.unshift(Et[Et.length-1]),ft.push(Nt[0]),Tt.unshift(Nt[Nt.length-1]),Tt.push(Et[0]),{vertices:pt,indices:new Uint16Array(z),maximumHeight:y,minimumHeight:B,encoding:dt,boundingSphere3D:ut,orientedBoundingBox:at,occludeePointInScaledSpace:st,vertexCountWithoutSkirts:nt,indexCountWithoutSkirts:it,westIndicesSouthToNorth:Nt,southIndicesEastToWest:ft,eastIndicesNorthToSouth:Et,northIndicesWestToEast:Tt}}function gt(t,e,n,i,o,a,s,l,h,c,m){let d=l.length;for(let g=0;g<d;++g){let p=l[g],I=p.cartographic,f=p.index,E=t.length,T=I.longitude,S=I.latitude;S=r.clamp(S,-r.PI_OVER_TWO,r.PI_OVER_TWO);let x=I.height-s.skirtHeight;s.hMin=Math.min(s.hMin,x),N.fromRadians(T,S,x,u),c&&(u.longitude+=h),c?g===d-1?u.latitude+=m:0===g&&(u.latitude-=m):u.latitude+=h;let w=s.ellipsoid.cartographicToCartesian(u);t.push(w),e.push(x),n.push(wt.clone(n[f])),i.length>0&&i.push(i[f]),o.length>0&&o.push(o[f]),$.multiplyByPoint(s.toENU,w,G);let R=s.minimum,k=s.maximum;P.minimumByComponent(G,R,R),P.maximumByComponent(G,k,k);let A=s.lastBorderPoint;if(ht(A)){let t=A.index;a.push(t,E-1,E,E,f,t)}s.lastBorderPoint=p}}var Ae=kt(oe);export{Ae as default};