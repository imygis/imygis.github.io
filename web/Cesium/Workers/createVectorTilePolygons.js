/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.111
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
import{a as R}from"./chunk-PJ5SMVAV.js";import{a as It}from"./chunk-ZCVEPFKV.js";import{a as M}from"./chunk-R342DLSA.js";import{a as bt}from"./chunk-LIYSS65T.js";import"./chunk-6BM2HRAM.js";import"./chunk-5QO2XXQ5.js";import"./chunk-GN2CGLQJ.js";import"./chunk-CJ3BUWJF.js";import{a as W}from"./chunk-JIRJ27VD.js";import"./chunk-KRUAPDMK.js";import"./chunk-XLNRNYRL.js";import{c as z}from"./chunk-RZVOXF67.js";import"./chunk-WJY2YZOB.js";import{a as o,b as nt,c as j}from"./chunk-6DBWVLDX.js";import{a as et}from"./chunk-ZEICRW3N.js";import"./chunk-E4M5DU35.js";import"./chunk-TCDHAGGB.js";import"./chunk-KW3W45S2.js";import"./chunk-ANRF456S.js";import{e as A}from"./chunk-5REUCI47.js";var kt=new o,Bt=new j,Nt=new z,E={min:void 0,max:void 0,indexBytesPerElement:void 0};function Pt(t){let e=new Float64Array(t),n=0;E.indexBytesPerElement=e[n++],E.min=e[n++],E.max=e[n++],o.unpack(e,n,kt),n+=o.packedLength,j.unpack(e,n,Bt),n+=j.packedLength,z.unpack(e,n,Nt)}function Tt(t){let e=t.length,n=0;for(let r=0;r<e;++r)n+=R.packedLength+3+t[r].batchIds.length;return n}function Ct(t,e,n){let r=e.length,o=2+r*M.packedLength+1+Tt(n),a=new Float64Array(o),i=0;a[i++]=t,a[i++]=r;for(let t=0;t<r;++t)M.pack(e[t],a,i),i+=M.packedLength;let s=n.length;a[i++]=s;for(let t=0;t<s;++t){let e=n[t];R.pack(e.color,a,i),i+=R.packedLength,a[i++]=e.offset,a[i++]=e.count;let r=e.batchIds,o=r.length;a[i++]=o;for(let t=0;t<o;++t)a[i++]=r[t]}return a}var yt=32767,wt=new o,Ht=new o,St=new o,Ut=new o,Ft=new o,Lt=new nt,Mt=new z;function Rt(t,e){let n;Pt(t.packedBuffer),n=2===E.indexBytesPerElement?new Uint16Array(t.indices):new Uint32Array(t.indices);let r=new Uint16Array(t.positions),a=new Uint32Array(t.counts),i=new Uint32Array(t.indexCounts),s=new Uint32Array(t.batchIds),f=new Uint32Array(t.batchTableColors),c=new Array(a.length),h=kt,l=Bt,u=Nt,m=E.min,p=E.max,d=t.minimumHeights,k=t.maximumHeights;A(d)&&A(k)&&(d=new Float32Array(d),k=new Float32Array(k));let g,I,w,b=r.length/2,y=r.subarray(0,b),N=r.subarray(b,2*b);bt.zigZagDeltaDecode(y,N);let L=new Float64Array(3*b);for(g=0;g<b;++g){let t=y[g],e=N[g],n=et.lerp(u.west,u.east,t/yt),r=et.lerp(u.south,u.north,e/yt),a=nt.fromRadians(n,r,0,Lt),i=l.cartographicToCartesian(a,wt);o.pack(i,L,3*g)}let j=a.length,x=new Array(j),T=new Array(j),S=0,U=0;for(g=0;g<j;++g)x[g]=S,T[g]=U,S+=a[g],U+=i[g];let B=new Float32Array(3*b*2),F=new Uint16Array(2*b),O=new Uint32Array(T.length),C=new Uint32Array(i.length),P=[],D={};for(g=0;g<j;++g)w=f[g],A(D[w])?(D[w].positionLength+=a[g],D[w].indexLength+=i[g],D[w].batchIds.push(g)):D[w]={positionLength:a[g],indexLength:i[g],offset:0,indexOffset:0,batchIds:[g]};let V,G=0,J=0;for(w in D)if(D.hasOwnProperty(w)){V=D[w],V.offset=G,V.indexOffset=J;let t=2*V.positionLength,e=2*V.indexLength+6*V.positionLength;G+=t,J+=e,V.indexLength=e}let Y=[];for(w in D)D.hasOwnProperty(w)&&(V=D[w],Y.push({color:R.fromRgba(parseInt(w)),offset:V.indexOffset,count:V.indexLength,batchIds:V.batchIds}));for(g=0;g<j;++g){w=f[g],V=D[w];let t=V.offset,e=3*t,r=t,b=x[g],y=a[g],N=s[g],E=m,j=p;A(d)&&A(k)&&(E=d[g],j=k[g]);let R=Number.POSITIVE_INFINITY,S=Number.NEGATIVE_INFINITY,U=Number.POSITIVE_INFINITY,W=Number.NEGATIVE_INFINITY;for(I=0;I<y;++I){let t=o.unpack(L,3*b+3*I,wt);l.scaleToGeodeticSurface(t,t);let n=l.cartesianToCartographic(t,Lt),a=n.latitude,i=n.longitude;R=Math.min(a,R),S=Math.max(a,S),U=Math.min(i,U),W=Math.max(i,W);let s=l.geodeticSurfaceNormal(t,Ht),f=o.multiplyByScalar(s,E,St),c=o.add(t,f,Ut);f=o.multiplyByScalar(s,j,f);let u=o.add(t,f,Ft);o.subtract(u,h,u),o.subtract(c,h,c),o.pack(u,B,e),o.pack(c,B,e+3),F[r]=N,F[r+1]=N,e+=6,r+=2}u=Mt,u.west=U,u.east=W,u.south=R,u.north=S,c[g]=M.fromRectangle(u,m,p,l);let G=V.indexOffset,J=T[g],Y=i[g];for(O[g]=G,I=0;I<Y;I+=3){let e=n[J+I]-b,r=n[J+I+1]-b,o=n[J+I+2]-b;P[G++]=2*e+t,P[G++]=2*r+t,P[G++]=2*o+t,P[G++]=2*o+1+t,P[G++]=2*r+1+t,P[G++]=2*e+1+t}for(I=0;I<y;++I){let e=I,n=(I+1)%y;P[G++]=2*e+1+t,P[G++]=2*n+t,P[G++]=2*e+t,P[G++]=2*e+1+t,P[G++]=2*n+1+t,P[G++]=2*n+t}V.offset+=2*y,V.indexOffset=G,C[g]=G-O[g]}P=W.createTypedArray(B.length/3,P);let _=Y.length;for(let t=0;t<_;++t){let e=Y[t].batchIds,n=0,r=e.length;for(let t=0;t<r;++t)n+=C[e[t]];Y[t].count=n}let H=Ct(2===P.BYTES_PER_ELEMENT?W.UNSIGNED_SHORT:W.UNSIGNED_INT,c,Y);return e.push(B.buffer,P.buffer,O.buffer,C.buffer,F.buffer,H.buffer),{positions:B.buffer,indices:P.buffer,indexOffsets:O.buffer,indexCounts:C.buffer,batchIds:F.buffer,packedBuffer:H.buffer}}var Jt=It(Rt);export{Jt as default};